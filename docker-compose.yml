version: "3.8"

services:
  kong-db:
    image: postgres:13
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migration:
    image: kong:3.6
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: kong
    command: kong migrations bootstrap
    restart: on-failure

  kong-migration-up:
    image: kong:3.6
    depends_on:
      - kong-db
      - kong-migration
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: kong
    command: kong migrations up
    restart: on-failure

  kong:
    image: kong:3.6
    depends_on:
      - kong-db
      - kong-migration-up
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - "8000:8000"   # Public entrypoint for APIs
      - "8001:8001"   # Kong Admin API
      - "8443:8443"   # HTTPS
      - "8444:8444"   # Kong Admin API HTTPS
    
  scanner1:
    build: ./scanner1
    ports:
      - "5001:5001"

  scanner2:
    build: ./scanner2
    ports:
      - "5002:5002"
